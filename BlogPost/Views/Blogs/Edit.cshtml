@model BlogPost.Models.Blogs.EditBlogModel

@{
    ViewData["Title"] = "Edit Blog";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Edit Blog</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
        <div class="container-fluid">
            <a class="navbar-brand" href="/Blogs">Blog Platform</a>
            <div class="collapse navbar-collapse">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="/Blogs">Home</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container d-flex justify-content-center">
        <div class="col-md-6">
            <h1 class="mb-4 text-center">Edit Blog</h1>

            <form id="editBlogForm" class="needs-validation" novalidate>
                <div class="mb-3">
                    <label for="Title" class="form-label">Title:</label>
                    <input id="title" name="Title" class="form-control" value="@Model.Title" required />
                </div>

                <div class="mb-3">
                    <label for="Text" class="form-label">Text:</label>
                    <textarea id="text" name="Text" class="form-control" rows="5" required>@Model.Text</textarea>
                </div>

                <div class="mb-3">
                    <label for="Category" class="form-label">Category:</label>
                    <select id="category" name="Category" class="form-select">
                        @foreach (var category in (IEnumerable<BlogPostBll.Enums.CategoryEnum>)ViewBag.Categories)
                        {
                            <option value="@((int)category)" @(category == Model.Category ? "selected" : "")>
                                @category
                            </option>
                        }
                    </select>
                </div>

                <input type="hidden" id="id" name="Id" value="@Model.Id" />

                <div class="text-center">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <a href="/Blogs" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<script>
    document.getElementById('editBlogForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        const id = document.getElementById('id').value;
        const title = document.getElementById('title').value.trim();
        const text = document.getElementById('text').value.trim();
        const category = parseInt(document.getElementById('category').value, 10);
        const token = localStorage.getItem('token');

        try {
            const response = await fetch('/Blogs/Edit', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ id, title, text, category })
            });

            if (response.ok) {
                window.location.href = response.url;
            } else {
                const error = await response.json();
                alert('Error: ' + (error.message || 'Unable to save changes'));
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An unexpected error occurred.');
        }
    });
</script>