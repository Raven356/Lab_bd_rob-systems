<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            position: relative;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 10px;
            transition: background-color 0.3s;
        }

            li:hover {
                background-color: #f8f9fa;
            }

            li .action-buttons {
                display: none;
                position: absolute;
                right: 10px;
                top: 15px;
            }

            li:hover .action-buttons {
                display: flex;
                gap: 5px; /* Adds spacing between the buttons */
            }

            li .action-buttons a, li .action-buttons button {
                margin-bottom: 0; /* Ensures buttons align properly without extra bottom margin */
            }

        #filters {
            display: none;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
        <div class="container-fluid">
            <a class="navbar-brand" href="/Blogs">Blog Platform</a>
            <div class="collapse navbar-collapse">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="/Blogs">Home</a>
                    </li>
                </ul>
                <a id="createPostButton" class="btn btn-primary ms-3">Create New Post</a>
                <a id="loginButton" class="btn btn-secondary" href="/User/Login">Login</a>
                <a id="logoutButton" class="btn btn-danger" style="display: none;">Logout</a>
            </div>
        </div>
    </nav>

    <div class="container d-flex justify-content-center">
        <div class="col-md-8">
            <h1 class="mb-4">Blogs</h1>

            <button class="btn btn-secondary mb-3" onclick="toggleFilters()">Toggle Filters</button>
            <div id="filters" class="mb-4">
                <form method="get" action="/Blogs">
                    <div class="mb-3">
                        <label for="NameFilter" class="form-label">Filter by Name:</label>
                        <input type="text" id="NameFilter" name="name" class="form-control" placeholder="Enter blog title..." />
                    </div>
                    <div class="mb-3">
                        <label for="CategoryFilter" class="form-label">Filter by Category:</label>
                        <select id="CategoryFilter" name="category" class="form-select">
                            <option value="">All Categories</option>
                            @foreach (var category in (IEnumerable<BlogPostBll.Enums.CategoryEnum>)ViewBag.Categories)
                            {
                                <option value="@category">@category</option>
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                </form>
            </div>

            <ul>
                @foreach (var blog in Model)
                {
                    <li>
                        <strong>@blog.Title</strong>
                        <p><small>Category: @blog.Category</small></p>
                        <div class="action-buttons">
                            <a href="/Blogs/Details/@blog.Id" class="btn btn-info btn-sm">Details</a>
                            @if (blog.AuthorId == BlogPostBll.CredentialHelper.UserId)
                            {
                                <a href="/Blogs/Edit/@blog.Id" class="btn btn-warning btn-sm">Edit</a>
                                <form id="deleteForm-@blog.Id">
                                    <button type="button" class="btn btn-danger btn-sm" onclick="deleteBlog('@(blog.Id)')">Delete</button>
                                </form>
                            }
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>

    <script>
        async function deleteBlog(blogId) {
            const token = localStorage.getItem('token');
            if (!token) {
                alert('You need to be logged in to delete a blog.');
                return;
            }

            const confirmation = confirm('Are you sure you want to delete this blog?');
            if (!confirmation) {
                return;
            }

            try {
                const response = await fetch(`/Blogs/Delete/${blogId}`, {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json',
                    },
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    const error = await response.json();
                    alert('Error: ' + (error.message || 'Unable to delete the blog.'));
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An unexpected error occurred.');
            }
        }

        async function checkUserRegistration() {
            const token = localStorage.getItem('token');
            if (!token) {
                return false;
            }

            try {
                const response = await fetch('/User/IsRegistered', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`,
                    },
                });

                return response;
            } catch (error) {
                console.error('Error checking user registration:', error);
                return false;
            }
        }

        async function setupPage() {
            const response = await checkUserRegistration();
            const isRegistered = response.ok;

            if (isRegistered) {
                document.getElementById('loginButton').style.display = 'none';
                document.getElementById('logoutButton').style.display = 'inline';

            } else {
                document.getElementById('loginButton').style.display = 'inline';
                document.getElementById('logoutButton').style.display = 'none';
            }

            document.getElementById('logoutButton').addEventListener('click', function () {
                localStorage.removeItem('token');
                window.location.reload();
            });

            document.getElementById('createPostButton').addEventListener('click', function () {
                const token = localStorage.getItem('token');
                if (!token) {
                    alert('You need to be logged in to create a new post.');
                    window.location.href = '/User/Login';
                    return;
                }

                fetch('/Blogs/Create', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                    },
                })
                .then(() => {
                    window.location.href = '/Blogs/Create';
                })
                .catch(error => {
                    console.error('Error accessing create post page:', error);
                    alert('Failed to access the create post page.');
                });
            });
        }

        function toggleFilters() {
            const filters = document.getElementById('filters');
            filters.style.display = filters.style.display === '' ? 'block' : '';
        }

        setupPage();
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
